server:
  port: ${SERVER_PORT:8080}

spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DATASOURCE_HOST:localhost}:${DATASOURCE_PORT:5432}/${DATASOURCE_DB_NAME:postgres}?prepareThreshold=0
    username: ${DATASOURCE_USERNAME:postgres}
    password: ${DATASOURCE_PASSWORD:postgres}


  jpa:
    show-sql: ${JPA_SHOW_SQL:false}
    generate-ddl: false
    hibernate:
      ddl-auto: none

  flyway:
    enabled: true
    baseline-on-migrate: true

  kafka:
    bootstrap-servers: localhost:9092     # hostname from docker-compose service
    consumer:
      group-id: request-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: '*'   # allow all packages, change for production
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

#  mail:
#    host: smtp.gmail.com
#    port: 587
#    username: nurasyl.sakaev@gmail.com
#    password: onyhnqphbotommee
#    properties:
#      mail:
#        smtp:
#          auth: true
#          starttls:
#            enable: true



jwt:
  secret: 'my_secret_key_which_should_be_very_long'
  expiration: 86400000  # 24 hours in milliseconds
